version: '3.4' 

services:
  matches.api:
    image: ${DOCKER_REGISTRY-}matchesapi
    container_name: matchesapi
    build:
      context: .
      dockerfile: Services/Matches/Matches.API/Dockerfile
    depends_on:
      - postgres
      - rabbitmq
      - redis 

  teams.api:
    image: ${DOCKER_REGISTRY-}teamsapi
    container_name: teamsapi
    build:
      context: .
      dockerfile: Services/Teams/Teams.API/Dockerfile
    depends_on:
      - postgres
      - rabbitmq

      
  auth.webapi:
    image: ${DOCKER_REGISTRY-}authwebapi
    container_name: authwebapi
    build:
      context: .
      dockerfile: Services/Auth/Auth.WebApi/Dockerfile
    depends_on:
      - postgres


  postgres:
    image: postgres
    container_name: my-postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
    volumes:
    - postgres_volume:/var/lib/postgresql/data


  rabbitmq:
    image: rabbitmq:3.12.0-management
    container_name: my-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672 
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
    - rabbitmq_volume:/var/lib/rabbitmq/data


  redis:
    image: redis
    container_name: my-redis
    ports:
      - 6319:6379
    volumes:
    - redis_volume:/var/lib/redis/data


  elasticsearch:
    image: elasticsearch:8.8.0
    container_name: my-elasticsearch
    volumes: 
      - elasticsearch_volume:/var/lib/elasticsearch/data"
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      

  kibana:
    image: kibana:8.8.0
    container_name: my-kibana
    ports: 
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=["http://my-elasticsearch:9200"]
    volumes:
      - "kibana_volume:/var/lib/kibana/data"   
    depends_on:
      - elasticsearch

  
  gateway.api:
    image: ${DOCKER_REGISTRY-}gatewayapi
    container_name: gatewayapi
    build:
      context: .
      dockerfile: ApiGateways/Gateway.API/Dockerfile
    depends_on:
      - matches.api
      - teams.api
      - auth.webapi

volumes:
  postgres_volume:
    external: true
  rabbitmq_volume:
  redis_volume:  
  elasticsearch_volume:
  kibana_volume: